import math
def fillPrimes(chprime, high):

    ck = [True ] *(high +1)

    l = int(math.sqrt(high))
    for i in range(2, l+ 1):
        if ck[i]:
            for j in range(i * i, l + 1, i):
                ck[j] = False

    for k in range(2, l + 1):
        if ck[k]:
            chprime.append(k)
    return chprime

def is_prime(chprime,low, high,x):


    prime = [True] * (high - low + 1)
    # here prime[0] indicates whether low is prime or not similarly prime[1] indicates whether low+1 is prime or not
    for i in chprime:
        lower = (low // i)

        if lower <= 1:
            lower = i + i
        elif (low % i) != 0:
            lower = (lower * i) + i
        else:
            lower = lower * i
        for j in range(lower, high + 1, i):
            prime[j - low] = False

    if prime[x - low]:
        return True
    else:
        return False

def cntDivisors(n,chprime,a,b):
    if a!=1 and is_prime(chprime,a,b,n)==False :
        i = 1
        cnt=0
        while i <= math.sqrt(n):

            if (n % i == 0):

                # If divisors are equal, print only one
                if (n / i == i):
                    cnt+=1
                else:
                    # Otherwise print both
                    cnt+=2

            i = i + 1
        return cnt
    else:
        return 2
a, b, n = map(int, input().split())# 1,7,2
chprime = list()
chprime=fillPrimes(chprime, b)
ans=0
if a==1:
    if a==n:
        ans+=1
        a=2
    else:
        a=2

temp=-1
for i in range(a,b+1):
    temp=cntDivisors(i,chprime,a,b)
    if temp==n:
        ans+=1
print(ans)

